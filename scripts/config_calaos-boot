#!/bin/bash

set -e

NOCOLOR='\033[0m'
CYAN='\033[0;36m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'

color()
{
    echo -e "$1$*${NOCOLOR}"
}

parse_cmdline()
{
    # Parse command line and LABEL variable
    set -- $(cat /proc/cmdline)
    for x in "$@"; do
        case "$x" in
            calaos_install)
                CALAOS_INSTALL="yes"
            ;;
        esac
    done
}

parse_arguments()
{
    # Parse arguments
    while [ $# -gt 0 ]; do
        case "$1" in
            --calaos-install)
                CALAOS_INSTALL="yes"
            ;;
        esac
        shift
    done
}

load_containers()
{
    source_files=(/usr/share/calaos/*.source)

    for source_file in "${source_files[@]}"; do
        source "$source_file"
        ct_name=$(basename "$source_file" .source)

        log "Loading container $ct_name"
        load_containers_cache "$ct_name" "${IMAGE_SRC}"
    done

    echo
    color "${GREEN}" "Initialization done!"
    echo "Continuing boot..."
    log "Initialization done! Continuing boot"
}

log()
{
    echo "$1" | systemd-cat -t calaos-boot -p info
}

#wait for all devices to be up
log "Waiting for all devices to be up..."
udevadm settle

#force console 2
chvt 2
sleep 2
clear

log "Starting Calaos-OS boot"

color "${LIGHTBLUE}" " ██████╗ █████╗ ██╗      █████╗  ██████╗ ███████╗       ██████╗ ███████╗"
color "${LIGHTBLUE}" "██╔════╝██╔══██╗██║     ██╔══██╗██╔═══██╗██╔════╝      ██╔═══██╗██╔════╝"
color "${LIGHTBLUE}" "██║     ███████║██║     ███████║██║   ██║███████╗█████╗██║   ██║███████╗"
color "${LIGHTBLUE}" "██║     ██╔══██║██║     ██╔══██║██║   ██║╚════██║╚════╝██║   ██║╚════██║"
color "${LIGHTBLUE}" "╚██████╗██║  ██║███████╗██║  ██║╚██████╔╝███████║      ╚██████╔╝███████║"
color "${LIGHTBLUE}" " ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝       ╚═════╝ ╚══════╝"
echo
echo
color "${PURPLE}" "Welcome to Calaos-OS!"
echo
color "${CYAN}" "Calaos-OS is currently initializing. Please wait..."
color "${CYAN}" "This can take a few minutes. Please be patient."
echo
echo

log "Parsing kernel command line"
parse_cmdline

log "Parsing arguments"
parse_arguments "$@"

# Define the dialog exit status codes
: "${DIALOG_OK=0}"
: "${DIALOG_CANCEL=1}"
: "${DIALOG_ESC=255}"

if [ "$CALAOS_INSTALL" == "yes" ]
then
    log "Calaos-OS installation was requested. Starting installer"

    color "${GREEN}" "Calaos-OS installation was requested. Starting installer..."
    echo
    sleep 2

    # Create a temporary file and make sure it goes away when we're done
    tmp_file=$(mktemp 2>/dev/null) || tmp_file=/tmp/tmp1$$
    tmp_file2=$(mktemp 2>/dev/null) || tmp_file2=/tmp/tmp2$$
    trap "rm -f $tmp_file $tmp_file2" 0 1 2 5 15

    retvalue=$(dialog --backtitle "Calaos-OS Installer" --title "Calaos-OS Installer" \
        --yesno "Do you want to install Calaos-OS?\n\nIf No, Calaos-OS Live will continue booting normally" 8 60)
    case $retvalue in
        "$DIALOG_OK")
            disks=()

            lsblk -d -n -p -o NAME,MODEL,SIZE,TYPE --json > "$tmp_file"
            mount > "$tmp_file2"

            # get disk count
            cpt=$(< "$tmp_file" jq -r ".blockdevices | length")
            for ((i=0; i<$cpt; i++))
            do
                # get disk info
                disk=$(< "$tmp_file" jq -r ".blockdevices[$i].name")
                model=$(< "$tmp_file" jq -r ".blockdevices[$i].model")
                size=$(< "$tmp_file" jq -r ".blockdevices[$i].size")
                type=$(< "$tmp_file" jq -r ".blockdevices[$i].type")

                #check if disk is mounted on / using mount command
                checked="ON"
                if < "$tmp_file2" grep -q "$disk"
                then
                    checked="OFF"
                fi

                # check if disk is a hard drive
                if [ "$type" == "disk" ]
                then
                    # "/dev/nvme0n1" "WDC PC SN720 SDAPNTW-256G-1016 [238.5G]" "OFF"
                    disks+=("$disk" "$model [$size]" "$checked")
                fi
            done

            # ask user to select a disk
            retvalue=$(dialog --backtitle "Calaos-OS Installer" --title "Calaos-OS Installer" --radiolist "Select where to install Calaos OS::" 20 80 10 "${disks[@]}" 2> "$tmp_file")
            case $retvalue in
                "$DIALOG_OK")
                    disk=$(cat "$tmp_file")
                    ;;
                *)
                    color "${GREEN}" "Installing Calaos-OS on $retvalue..."
                    echo
                    sleep 2

                    calaos_install "$retvalue"
                ;;
            esac

            case $disk in
                "")
                    color "${RED}" "No disk selected. Calaos-OS installation aborted."
                    sleep 2
                    load_containers
                    echo
                    sleep 2

                    # change back to main console
                    chvt 1
                ;;
                *)
                    color "${GREEN}" "Installing Calaos-OS on $disk..."
                    echo
                    sleep 2

                    calaos_install "$disk"
                ;;
            esac
        ;;
    esac
else
    log "Calaos-OS installation was not requested. Continuing boot"
    log "Loading containers"

    load_containers
    echo
    sleep 2

    # change back to main console
    chvt 1
fi
