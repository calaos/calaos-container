#!/bin/bash

set -e

if [ -e /tmp/calaos-os.container.install ]
then
    echo "Not pulling image. Calaos-OS image creation in progress..."
    exit 0
fi

# Check if pkgname parameter is provided
if [ -z "$1" ]; then
    echo "Please provide the pkgname parameter."
    exit 1
fi

pkgname="$1"
url="/usr/share/calaos/$pkgname.source"

# Check if the source file exists
if [ ! -f "$url" ]; then
    echo "Source file $url does not exist."
    exit 1
fi

# Read the URL from the source file
source "$url"

image_base=$(echo "$IMAGE_SRC" | cut -d: -f 1)
image_tag=$(echo "$IMAGE_SRC" | cut -d: -f 2)

if [ -z "$SERVICE_NAME" ]; then
    SERVICE_NAME="$pkgname.service"
fi

#check if $SERVICE_NAME is a valid service
if ! systemctl list-units --type=service | grep -q "$SERVICE_NAME"; then
    echo "Service $SERVICE_NAME does not exist."
    unset SERVICE_NAME
    exit 1
fi

echo " > Pulling new image $IMAGE_SRC"
podman pull "$IMAGE_SRC"

if [ -n "$SERVICE_NAME" ]; then
    echo " > Stopping service $SERVICE_NAME"
    systemctl stop "$SERVICE_NAME" || true
fi

echo " > Removing old container image and get tag"
for i in $(podman images | grep "$image_base" | awk '{print $3}')
do
    for tag in $(podman image inspect "$i" --format '{{range .RepoTags}}{{.}}{{end}}')
    do
        ibase=$(echo "$tag" | cut -d: -f 1)
        t=$(echo "$tag" | cut -d: -f 2)
        if [ "$ibase" == "$image_base" ] && [ "$t" != "$image_tag" ]; then
            echo " > Removing $ibase:$t"
            podman rmi --force "$i"
        fi
    done
done

# Clean old remaining container images
echo " > Cleaning old images"
podman image prune -f

# Remove old tags if they exist
if podman image exists "localhost/var/lib/cache/containers/$pkgname"; then
    podman rmi "localhost/var/lib/cache/containers/$pkgname"
fi
